@page
@model SLGIS.Web.Pages.PostData.NewOrEditModel

@{
    //ViewBag.Title = Model.PostData.Id != Guid.Empty ? "Sửa lại" : "Thêm mới dữ liệu vận hành";
    ViewBag.Breadcrumbs = "<a href='" + Url.Page("Index") + "' class='breadcrumb-item'>PostData</a>" +
                          "<span class='breadcrumb-item active'>" + ViewBag.Title + "</span>";

}

@section Factory {
    <partial name="_FactorySelectPartial" />
}
<style>
    .table-text-box {
        display: inline;
        width: 100%;
        box-sizing: border-box !important;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="PostData.HydropowerPlantId" value="@ViewData["HydropowerPlantId"]" />
    <div class="card shadow-base mb-2">
        <div class="card-header">
            <a data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
                <strong>Dữ liệu ngày</strong>
                <i class="fa fa-caret-down pull-right mt-1"></i>
            </a>
        </div>
        <div class="card-body">
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group col-md-3">
                    @Html.Label("Ngày")
                    <input class="form-control text-box single-line" data-val="true" data-val-required="The Date field is required." id="PostData_Date" name="PostData.Date" type="date" value="@Model.PostData.Date.ToString("yyyy-MM-dd")">
                    @Html.ValidationMessageFor(model => model.PostData.Date, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    @Html.Label("Sản lượng ngày (MWh)")
                    @Html.EditorFor(model => model.PostData.SanLuongNgay, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostData.SanLuongNgay, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    @Html.Label("Tổng lượng nước qua Tuabin (m3)")
                    @Html.EditorFor(model => model.PostData.TotalWater, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostData.TotalWater, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    @Html.Label("Số giờ phát điện (giờ)")
                    @Html.EditorFor(model => model.PostData.SoGioPhatDien, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostData.SoGioPhatDien, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-base mb-2">
        <div class="card-header">
            <a data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
                <strong>Dữ liệu chi tiết</strong>
                <i class="fa fa-caret-down pull-right mt-1"></i>
            </a>
        </div>
        <div class="card-body">
            <div class="row">
                <table id="post-data">
                    <thead>
                        <tr>
                            <th>Giờ</th>
                            @foreach (var item in Model.Elements)
                            {
                                <th title="@item.Title">@item.Title (@item.Unit)</th>
                            }
                        </tr>
                    </thead>
                    <tr class="data-row">
                        <td><input class="table-text-box fuck" type="number" value="10"/></td>
                        @foreach (var item in Model.Elements)
                        {
                            <td><input type="text" class="table-text-box" data_code="@item.Code" value="" /></td>
                        }
                    </tr>
                </table>
                <div class="row">
                    <div class="col-md-12">
                        <a href="javascript:void(0)" onclick="addRow()"><i class="icon ion-ios-plus"> </i>Thêm dòng</a>

                        @*@foreach (var item in Model.Elements)
                            {
                                <div class="form-group">
                                    @Html.Label(item.Title) (@Html.Label(item.Unit))
                                    @Html.Editor(item.Title, new { htmlAttributes = new { @class = "form-control inputElement", data_code = item.Code } })
                                </div>
                            }*@
                        @*<div class="form-group">
                                @Html.LabelFor(model => model.PostData.Note)
                                @Html.EditorFor(model => model.PostData.Note, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PostData.Note, "", new { @class = "text-danger" })
                            </div>*@
                    </div>
                </div>
            </div>
        </div>
    </div>
    <button class="btn btn-primary" onclick="addRow();" type="submit">Lưu</button>
    <a href="@Url.Page("Index")" class="btn btn-outline-secondary">Quay lại</a>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function beforeSubmit() {
            var values = [];
            $(".inputElement").each(function () {
                var $this = $(this);
                if ($this.val() == "") {
                    return;
                }

                values.push({ code: $this.data("code"), value: $this.val() });
            });

            var html = buildHtml(values);
            $("#elements").html(html);
            return true;
        }

        function buildHtml(values) {
            var html = "";
            for (var i = 0; i < values.length; i++) {
                html += "<input type='hidden' name='PostData.Values[" + i + "].Code' value='" + values[i].code + "' />";
                html += "<input type='hidden' name='PostData.Values[" + i + "].Value' value='" + values[i].value + "' />";
            }
            return html;
        }

        function addRow() {
            $('#post-data tr:last input').each(function() {
                console.log($(this).val());
            });
            var row = $('#post-data tr:last').html();
            //$(row, 'input[type="number"]').each(function () { $(this).val('2') });
            //alert($('.fuck', row).val());
            //$('.fuck', row).val(22);
            $('#post-data tr:last').after('<tr>' + row + '</tr>');
            $('#post-data tr:last input:first').val(100);
        }

    </script>
}
